[{"C:\\Users\\Lukas\\lj-pomodoro\\src\\App.js":"1","C:\\Users\\Lukas\\lj-pomodoro\\src\\reportWebVitals.js":"2","C:\\Users\\Lukas\\lj-pomodoro\\src\\Header.js":"3","C:\\Users\\Lukas\\lj-pomodoro\\src\\index.js":"4"},{"size":12272,"mtime":1606264691311,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":280,"mtime":1606261584130,"results":"8","hashOfConfig":"6"},{"size":545,"mtime":1606261564638,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1beg2q5",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lukas\\lj-pomodoro\\src\\App.js",["20","21","22","23","24","25","26","27","28","29","30","31","32"],"import React, { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const initialTime = 900;\n  const initialBreakTime = 300;\n  const [session, setSession] = useState(4)\n  const [isRunning, setIsRunning] = useState(false)\n  const [timer, setTimer] = useState(initialTime)\n  const [resetTime, setResetTime] = useState(initialTime)\n  const [breakTimer, setBreakTimer] = useState(300)\n  const [displayBreak, setDisplayBreak] = useState(initialBreakTime)\n  const [displayWork, setDisplayWork] = useState(initialTime)\n  const [resetBreakTime, setResetBreakTime] = useState(initialBreakTime)\n  const [startBreak, setStartBreak] = useState(false)\n  const [pauseBreak, setPauseBreak] = useState(true)\n  const [dTime, setDTime] = useState(\"\")\n  const [wowScore, setWowScore] = useState(0)\n\n  let time = new Date(timer * 1000).toISOString().substr(11, 8);\n  let breakTime = new Date(breakTimer * 1000).toISOString().substr(11, 8);\n\n\n  let displayBreakTime = new Date(displayBreak * 1000).toISOString().substr(11, 8);\n\n  const dbseconds = new Date(displayBreak * 1000).toISOString().substr(17, 2);\n  const dbminutes = new Date(displayBreak * 1000).toISOString().substr(14, 2);\n  const dbhours = new Date(displayBreak * 1000).toISOString().substr(11, 2);\n\n  let displayWorkTime = new Date(displayWork * 1000).toISOString().substr(11, 8);\n\n  const dwseconds = new Date(displayWork * 1000).toISOString().substr(17, 2);\n  const dwminutes = new Date(displayWork * 1000).toISOString().substr(14, 2);\n  const dwhours = new Date(displayWork * 1000).toISOString().substr(11, 2);\n\n\n  const seconds = new Date(timer * 1000).toISOString().substr(17, 2);\n  const minutes = new Date(timer * 1000).toISOString().substr(14, 2);\n  const hours = new Date(timer * 1000).toISOString().substr(11, 2);\n\n  const breakSeconds = new Date(breakTimer * 1000).toISOString().substr(17, 2);\n  const breakMinutes = new Date(breakTimer * 1000).toISOString().substr(14, 2);\n  const breakHours = new Date(breakTimer * 1000).toISOString().substr(11, 2);\n\n\n  function sessionIncrement() {\n    setIsRunning(false)\n    resetTimer()\n    setSession(prevSession => session + 1)\n  }\n\n  function sessionDecrement() {\n    if (session > 0) {\n      setIsRunning(false)\n      setSession(prevSession => prevSession > 0 && prevSession - 1)\n    }\n  }\n\n  function resetTimer() {\n    setIsRunning(false)\n    setStartBreak(false)\n    setTimer(resetTime)\n  }\n\n  function resetBreakTimer() {\n    setBreakTimer(false)\n    setPauseBreak(false)\n    setBreakTimer(resetBreakTime)\n  }\n\n  function increment() {\n    if (!isRunning) {\n      setIsRunning(false);\n      setTimer(prevTimer => prevTimer + 300);\n      setResetTime(prevResetTime => prevResetTime + 300);\n      setDisplayWork(prevTimer => prevTimer + 300)\n    }\n  }\n\n  function sincrement() {\n    if (!isRunning) {\n      setIsRunning(false);\n      setTimer(prevTimer => prevTimer + 60);\n      setResetTime(prevResetTime => prevResetTime + 60);\n      setDisplayWork(prevTimer => prevTimer + 60)\n    }\n  }\n\n  function decrement() {\n    if (!isRunning & timer > 300) {\n      setIsRunning(false);\n      setTimer(prevTimer => prevTimer - 300);\n      setResetTime(prevResetTime => prevResetTime - 300);\n      setDisplayWork(prevTimer => prevTimer - 300)\n    }\n  }\n\n  \n  function sdecrement() {\n    if (!isRunning & timer > 60) {\n      setIsRunning(false);\n      setTimer(prevTimer => prevTimer - 60);\n      setResetTime(prevResetTime => prevResetTime - 60);\n      setDisplayWork(prevTimer => prevTimer - 60)\n    }\n  }\n\n  function incrementBreak() {\n    setPauseBreak(false);\n    setBreakTimer(prevTimer => prevTimer + 300);\n    setDisplayBreak(prevTimer => prevTimer + 300)\n    setResetBreakTime(prevBreakTime => prevBreakTime + 300)\n  }\n\n  function sincrementBreak() {\n    setPauseBreak(false);\n    setBreakTimer(prevTimer => prevTimer + 60);\n    setDisplayBreak(prevTimer => prevTimer + 60)\n    setResetBreakTime(prevBreakTime => prevBreakTime + 60)\n  }\n\n  function decrementBreak() {\n    if (breakTimer > 300) {\n      setPauseBreak(false);\n      setBreakTimer(prevTimer => prevTimer - 300);\n      setDisplayBreak(prevTimer => prevTimer - 300)\n    }\n  }\n\n  function sdecrementBreak() {\n    if (breakTimer > 60) {\n      setPauseBreak(false);\n      setBreakTimer(prevTimer => prevTimer - 60);\n      setDisplayBreak(prevTimer => prevTimer - 60)\n    }\n  }\n\n  function start() {\n    setIsRunning(true);\n    setStartBreak(false);\n  }\n\n  function startBreakTimer() {\n    setPauseBreak(true)\n    setStartBreak(true)\n    console.log(startBreak, pauseBreak)\n  }\n\n\n  function pause() {\n    setIsRunning(false)\n  }\n\n  function breakPause() {\n    setPauseBreak(false)\n  }\n\n  function resetSession() {\n    sessionIncrement()\n    setIsRunning(false)\n    setStartBreak(false)\n    setTimer(resetTime)\n  }\n\n  function breakClick() {\n    setStartBreak(true)\n    setPauseBreak(false)\n    setIsRunning(false)\n  }\n\n  function workClick() {\n    resetTimer()\n  }\n\n  function changeTime(e) {\n\n    var hoursT = Math.floor(e.target.value / 60);\n    var minutesT = e.target.value % 60;\n    setDTime(hoursT + \":\" + minutesT);\n  }\n\n  console.log(dTime)\n\n  // function changeTime(num)\n  //  { \n  //   var hours = Math.floor(num / 60);  \n  //   var minutes = num % 60;\n  //   return hours + \":\" + minutes;         \n  // }\n\n  function incrementWowScore() {\n    setWowScore(prevWowScore => prevWowScore + 1)\n  }\n\n  function rewards() {\n    document.getElementById(\"rewards\").innerHTML += \"<img class='rewardsGif' src='https://i.imgur.com/rIZqWbu.gif' />\";\n  }\n\n  function rewards2() {\n    document.getElementById(\"rewards\").innerHTML += \"<img class='rewardsGif' src='https://media1.tenor.com/images/9754d2117f0c62543035cdf65d709933/tenor.gif?itemid=8702504' />\";\n\n  }\n\n  // let rewardArr = [\"https://i.pinimg.com/originals/dc/75/b9/dc75b96b4141c0a0f5d2658b084e170b.png\", \"https://cdn.bulbagarden.net/upload/thumb/2/21/001Bulbasaur.png/250px-001Bulbasaur.png\", \"https://cdn.bulbagarden.net/upload/thumb/3/39/007Squirtle.png/250px-007Squirtle.png\"]\n\n  const timerAudio = new Audio(\"https://www.myinstants.com/media/sounds/greenscreen-wow.mp3\");\n  const breakAudio = new Audio('http://home.freeuk.com/podling/WHIP.WAV')\n  const sessionFinish = new Audio('http://chataholic2.homestead.com/files/woohoo.wav')\n  const yeBoi = new Audio(\"https://www.myinstants.com/media/sounds/mylongestyeahboyever.mp3\")\n\n  useEffect(() => {\n    if (isRunning && session > 0) {\n      const interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer > 0 && prevTimer - 1)\n        console.log(\"timer\" + timer)\n      }, 1000);\n      if (timer === 0 && session > 0) {\n        sessionDecrement()\n        setIsRunning(false)\n        setTimer(resetTime)\n        setStartBreak(true)\n        setPauseBreak(false)\n        setBreakTimer(initialBreakTime)\n        rewards()\n        incrementWowScore()\n        if (session > 1) {\n          timerAudio.load()\n          timerAudio.play()\n          // setTimeout(() => {\n          //   alert(\"Time for a break!\")\n          // }, 1000)\n        }\n      }\n\n      return () => clearInterval(interval)\n    }\n    else if (session === 0) {\n\n      // setTimeout(() => {\n      //   alert(\"Good work!\")\n      // }, 100)\n      setStartBreak(false)\n      setSession(4)\n      // rewards2()\n    }\n  }, [isRunning, session, timer])\n\n  useEffect(() => {\n    if (pauseBreak && startBreak && session > 0) {\n      const interval2 = setInterval(() => {\n        setBreakTimer(prevBreakTime => prevBreakTime > 0 && prevBreakTime - 1)\n        console.log(\"break\" + breakTimer)\n      }, 1000);\n      if (breakTimer === 0 && session > 0) {\n        setStartBreak(false)\n        // setIsRunning(true)\n        setBreakTimer(initialBreakTime)\n        breakAudio.load()\n        breakAudio.play()\n        // setTimeout(() => {\n        //   alert(\"Back to work!\")\n        // }, 1000)\n      }\n      return () => clearInterval(interval2)\n    }\n  }, [startBreak, breakTimer, startBreak, pauseBreak])\n\n  return (\n    <div>\n      <div className=\"App\">\n        <div className=\"Session\" >\n          <h1>Session</h1>\n          <div className=\"sessionDisplay\">\n            <button className=\"buttons\" onClick={session > 1 ? () => sessionDecrement() : null}>-</button>\n            <div className=\"sessionNumber\">{session}</div>\n            <button className=\"buttons\" onClick={() => sessionIncrement()}>+</button>\n          </div>\n        </div>\n        <div id=\"wowScore\">\n          <h1 > Wow Score </h1>\n          <h1>{wowScore}</h1>\n        </div>\n        <div className=\"displayTimers\" id=\"workTimer\" style={startBreak ? { display: \"none\" } : { display: \"\", backgroundColor: \"blue\" }}>\n          <button id=\"workWork\" className=\"breakOrWork\" onClick={() => workClick()}>Work</button>\n          <button id=\"workBreak\" className=\"breakOrWork\" onClick={() => breakClick()} >Break</button>\n          <div class=\"hms\">\n            <h1 style={hours === \"00\" ? { display: \"none\" } : { display: \"\" }}>{hours}h</h1>\n            <h1>{minutes}m</h1>\n            <h1>{seconds}s</h1>\n          </div>\n          <button class=\"impbutton\" style={isRunning ? { display: \"none\" } : { display: \"\" }} onClick={() => start()}>Start</button>\n          <button class=\"impbutton\" style={!isRunning ? { display: \"none\" } : { display: \"\" }} onClick={() => pause()} >Stop</button>\n          <button class=\"impbutton\" onClick={() => resetTimer()}>Reset</button>\n        </div>\n\n        <div className=\"displayTimers\" id=\"breakTimer\" style={startBreak ? { display: \"\", backgroundColor: \"red\" } : { display: \"none\" }}>\n          <button id=\"breakWork\" className=\"breakOrWork\" style={startBreak ? {} : null} onClick={() => workClick()}>Work</button>\n          <button id=\"breakBreak\" className=\"breakOrWork\" onClick={() => breakClick()} >Break</button>\n          <div class=\"hms\">\n            <h1 style={breakHours === \"00\" ? { display: \"none\" } : { display: \"\" }}>{breakHours}h</h1>\n            <h1>{breakMinutes}m</h1>\n            <h1>{breakSeconds}s</h1>\n          </div>\n          <button class=\"impbutton\" style={pauseBreak ? { display: \"none\" } : { display: \"\" }} onClick={() => startBreakTimer()}>Start</button>\n          <button class=\"impbutton\" style={!pauseBreak ? { display: \"none\" } : { display: \"\" }} onClick={() => breakPause()} >Stop</button>\n          <button class=\"impbutton\" onClick={() => resetBreakTimer()}>Reset</button>\n        </div>\n\n        <div id=\"setTimers\">\n          <div class=\"Session\">\n            <h1 className=\"TitleDisplay\">Set Work Timer </h1>\n            <div className=\"sessionDisplay\">\n            <button className=\"buttons\" onClick={() => sdecrement()}>-1</button>\n              <button className=\"buttons\" onClick={() => decrement()}>-5</button>\n              <div className=\"TimeDisplay\" >\n                <div class=\"disTime\">\n                  <h1 style={dwhours === \"00\" ? { display: \"none\" } : { display: \"\" }}>{dwhours}h</h1>\n                  <h1>{dwminutes}m</h1>\n                </div>\n              </div>\n              <button className=\"buttons\" onClick={() => increment()}>+5</button>\n              <button className=\"buttons\" onClick={() => sincrement()}>+1</button>\n              \n            </div>\n          </div>\n          <div class=\"Session\">\n            <h1 className=\"TitleDisplay\" >Set Break Timer</h1>\n            <div className=\"sessionDisplay\">\n            <button className=\"buttons\" onClick={() => sdecrementBreak()}>-1</button>\n              <button className=\"buttons\" onClick={() => decrementBreak()}>-5</button>\n              <div className=\"TimeDisplay\"> \n              <div class=\"disTime\">\n                  <h1 style={dbhours === \"00\" ? { display: \"none\" } : { display: \"\" }}>{dbhours}h</h1>\n                  <h1>{dbminutes}m</h1>\n                </div>\n               </div>\n              <button className=\"buttons\" onClick={() => incrementBreak()}>+5</button>\n              <button className=\"buttons\" onClick={() => sincrementBreak()}>+1</button>\n            </div>\n          </div>\n        </div>\n        {/* \n        <div class=\"newDisplay\">\n        <input placeholder={hours + \":\" + minutes + \":\" + seconds} onChange= {(e) => changeTime(e)} type=\"number\"></input>\n        </div> */}\n      </div>\n      <div id=\"rewards\">\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Lukas\\lj-pomodoro\\src\\reportWebVitals.js",[],"C:\\Users\\Lukas\\lj-pomodoro\\src\\Header.js",["33","34","35"],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <div id=\"Header\">\r\n      <img src=\"https://www.flaticon.com/svg/static/icons/svg/66/66165.svg\"></img>\r\n      <h1>LJ Pomodoro Timer</h1>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Lukas\\lj-pomodoro\\src\\index.js",[],{"ruleId":"36","severity":1,"message":"37","line":20,"column":7,"nodeType":"38","messageId":"39","endLine":20,"endColumn":11},{"ruleId":"36","severity":1,"message":"40","line":21,"column":7,"nodeType":"38","messageId":"39","endLine":21,"endColumn":16},{"ruleId":"36","severity":1,"message":"41","line":24,"column":7,"nodeType":"38","messageId":"39","endLine":24,"endColumn":23},{"ruleId":"36","severity":1,"message":"42","line":26,"column":9,"nodeType":"38","messageId":"39","endLine":26,"endColumn":18},{"ruleId":"36","severity":1,"message":"43","line":30,"column":7,"nodeType":"38","messageId":"39","endLine":30,"endColumn":22},{"ruleId":"36","severity":1,"message":"44","line":32,"column":9,"nodeType":"38","messageId":"39","endLine":32,"endColumn":18},{"ruleId":"36","severity":1,"message":"45","line":158,"column":12,"nodeType":"38","messageId":"39","endLine":158,"endColumn":24},{"ruleId":"36","severity":1,"message":"46","line":175,"column":12,"nodeType":"38","messageId":"39","endLine":175,"endColumn":22},{"ruleId":"36","severity":1,"message":"47","line":199,"column":12,"nodeType":"38","messageId":"39","endLine":199,"endColumn":20},{"ruleId":"36","severity":1,"message":"48","line":208,"column":9,"nodeType":"38","messageId":"39","endLine":208,"endColumn":22},{"ruleId":"36","severity":1,"message":"49","line":209,"column":9,"nodeType":"38","messageId":"39","endLine":209,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":246,"column":6,"nodeType":"52","endLine":246,"endColumn":33,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":266,"column":6,"nodeType":"52","endLine":266,"endColumn":54,"suggestions":"55"},{"ruleId":"36","severity":1,"message":"56","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":25},{"ruleId":"36","severity":1,"message":"57","line":1,"column":27,"nodeType":"38","messageId":"39","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":7,"column":7,"nodeType":"60","endLine":7,"endColumn":77},"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar","'breakTime' is assigned a value but never used.","'displayBreakTime' is assigned a value but never used.","'dbseconds' is assigned a value but never used.","'displayWorkTime' is assigned a value but never used.","'dwseconds' is assigned a value but never used.","'resetSession' is defined but never used.","'changeTime' is defined but never used.","'rewards2' is defined but never used.","'sessionFinish' is assigned a value but never used.","'yeBoi' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'resetTime', 'sessionDecrement', and 'timerAudio'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimer' needs the current value of 'resetTime'.","ArrayExpression",["61"],"React Hook useEffect has missing dependencies: 'breakAudio' and 'session'. Either include them or remove the dependency array.",["62"],"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [isRunning, resetTime, session, sessionDecrement, timer, timerAudio]",{"range":"67","text":"68"},"Update the dependencies array to be: [startBreak, breakTimer, pauseBreak, session, breakAudio]",{"range":"69","text":"70"},[7265,7292],"[isRunning, resetTime, session, sessionDecrement, timer, timerAudio]",[7892,7940],"[startBreak, breakTimer, pauseBreak, session, breakAudio]"]